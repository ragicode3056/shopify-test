{{ 'customer.css' | asset_url | stylesheet_tag }}

{%- style -%}
  .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
  }

  @media screen and (min-width: 750px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }
  form {
  display: flex;
  flex-direction: column;
  max-width: 400px;
  margin: 0 auto;
}
.card {
  border: 1px solid #ccc;
  padding: 10px;
  margin-bottom: 10px;
}
label {
  font-weight: bold;
  margin-bottom: 5px;
}

input[type="text"],
button {
  padding: 10px;
  margin-bottom: 10px;
  border: 1px solid #ccc;
  border-radius: 4px;
}

button {
  background-color: #4CAF50;
  color: white;
  cursor: pointer;
}

button:hover {
  background-color: #45a049;
}

input[type="text"]:focus {
  outline: none;
  border-color: #4CAF50;
}
  .test-box{
    width: 400px;
    height: 200px;
    border: 1px solid black;
    /* padding: 40px; */
    margin: 0 auto;
    display: flex;
    justify-content: center;
    align-items: center;
  }
  .test-parent a{
    margin-top:60px;
    display:flex;
  }
  .order-history {
  display: flex;
  flex-direction: column;
  margin: 20px;
}

.card-header {
  background-color: #f2f2f2;
  padding: 10px;
}

.card-body {
  display: flex;
  flex-direction: column;
}

.order-card {
  border: 1px solid #ccc;
  border-radius: 4px;
  margin-bottom: 10px;
  padding: 10px;
}

.order-details {
  display: flex;
  flex-direction: column;
}

.order-number a {
  font-weight: bold;
  color: #333;
  text-decoration: none;
}

.order-date,
.order-payment,
.order-fulfillment,
.order-total {
  display: flex;
  justify-content: space-between;
  margin-top: 5px;
}

.order-actions {
  margin-top: 10px;
}

.order-actions button {
  background-color: #4caf50;
  color: #fff;
  border: none;
  border-radius: 4px;
  padding: 6px 12px;
  cursor: pointer;
}

.order-actions button:hover {
  background-color: #45a049;
}

  /* Popup styles */
  .popup {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 300px;
    padding: 20px;
    background-color: #f1f1f1;
    border: 1px solid #ccc;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
    z-index: 9999;
    display: none;
  }

  .popup h2 {
    margin-top: 0;
  }

  .popup input[type="text"] {
    width: 100%;
    padding: 10px;
    margin-bottom: 10px;
    box-sizing: border-box;
  }

  .popup button {
    padding: 10px 20px;
  }
  .test-parent{
        display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    margin: 0 auto;
  }
  .validation-message{
    color:red;
  }
{%- endstyle -%}
<div class="test-parent" id="my-div">

  <label for="order_number">Order Number:</label>
  <input type="text" id="order_number" name="order_number" required>

   <label for="order_date">Order Date:</label>
  <input type="date" id="order_date" name="order_date" required>

  <label for="postal_code">Postal Code:</label>
  <input type="text" id="postal_code" name="postal_code" required>


  <button type="submit" id="formSubmit" onclick=submitForm()>Continue</button>
  <div id="cardContainer"></div>

<div id="exchangePopupNonLogged" class="popup">
  <h2>Exchange Order</h2>
  <p>Order Number: <span id="popupOrderNumber"></span></p>
  <p>Order Total: <span id="popupOrderTotal"></span></p>
  <input type="text" id="reasonInput" placeholder="Why are you returning?" />
  <button onclick="closePopup()">Continue</button>
</div>
<div id="thanksPopupNonLogged" class="popup">
 
  <p>wij hebben uw verzoek om een toestel terug te sturen goed ontvangen. U ontvangt binnen de 2 werkdagen een mailtje met de nodige info om het toestel op te sturen</p>
  <button onclick="closeThanksPopup()">Close</button>
</div>
 
<script>
  function submitForm() {
  
    let orderNumber = document.getElementById('order_number').value;
    let postalCode = document.getElementById('postal_code').value;
    let orderDate = document.getElementById('order_date').value;
    console.log(orderNumber,postalCode,orderDate);
    
      $.ajax({
        url: 'https://www.kisshosting.be/api_test/process_order.php',
        method: 'POST',
        data: {
          order_number: orderNumber, // get by queryselector
          postal_code: postalCode
        },
    
        success: function(response) {
          
          // extract array from response
          var startIndex = response.indexOf('['); // Find the start of the JSON array
          var endIndex = response.lastIndexOf(']'); // Find the end of the JSON array
          
          if (startIndex !== -1 && endIndex !== -1) {
            var jsonSubstring = response.substring(startIndex, endIndex + 1);
            var matchingOrders = JSON.parse(jsonSubstring);
          
            console.log(matchingOrders,"matchingOrders"); // Display the array in the console
          } else {
            console.error('Unable to extract JSON array from the response.');
          }
    
    document.getElementById('cardContainer').innerHTML = '';
 if (matchingOrders.length === 0) {
          // Display validation message
          var validationMessage = document.createElement('p');
          validationMessage.textContent = 'Details mismatched. Please enter correctly.';
          validationMessage.classList.add('validation-message');
          document.getElementById('cardContainer').appendChild(validationMessage);
        } else{
  // Loop through each item and create a card
  matchingOrders.forEach(function(order) {
    var orderDate = order.processed_at.split('T')[0];
    // Construct the card HTML
    var cardHTML = `
      <div class="card">
        <h3>${order.line_items[0].name}</h3>
        <p>Order Number : ${order.order_number}</p>
        <p>Order Date  : ${orderDate}</p>
        <p>Total Price : ${order.total_price}</p>
        <p>Quantity : ${order.line_items[0].quantity}</p>
         <p> Address :
            ${order.shipping_address.address1}
         ${order.shipping_address.city}
         ${order.shipping_address.zip}</p>
           <button onclick="exchangeOrder(${order.order_number}, ${order.total_price})">Exchange</button>
      </div>
      
    `;

    // Append the card HTML to the container
    document.getElementById('cardContainer').innerHTML += cardHTML;
    console.log(order.shipping_address,"shipping_address*****")
  })};     
        },
        error: function(xhr, status, error) {
          // Handle AJAX error here
          console.log(error);
        }
      });
  }
   let s = document.getElementById('formSubmit');
var orderNumberElement; // Declare the variables in a higher scope
  var orderTotalElement;

  function exchangeOrder(orderNumber, orderTotal) {
    // Open the first popup
    var popup = document.getElementById('exchangePopupNonLogged');
    popup.style.display = 'block';

    // Set the order number and order total in the first popup
    orderNumberElement = document.getElementById('popupOrderNumber'); // Assign the values to the variables
    orderNumberElement.textContent = orderNumber;

    orderTotalElement = document.getElementById('popupOrderTotal');
    orderTotalElement.textContent = orderTotal;
  }

  function closePopup() {
    // Close the first popup
    var popup = document.getElementById('exchangePopupNonLogged');
    popup.style.display = 'none';

    // Open the second popup
    var thanksPopup = document.getElementById('thanksPopupNonLogged');
    thanksPopup.style.display = 'block';

    // Get the entered reason
    var reasonInput = document.getElementById('reasonInput');
    var reason = reasonInput.value;

    // Log the order number, order total, and reason
    console.log('Order Number:', orderNumberElement.textContent);
    console.log('Order Total:', orderTotalElement.textContent);
    console.log('Reason:', reason);
  }

  function closeThanksPopup() {
    // Close the second popup
    var thanksPopup = document.getElementById('thanksPopupNonLogged');
    thanksPopup.style.display = 'none';
  }
    console.log({{ customer | json }},"customers")
</script>
